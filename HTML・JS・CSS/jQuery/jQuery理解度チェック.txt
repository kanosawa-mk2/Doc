✅ jQueryを「理解し使える」と言えるためのチェックリスト
① セレクタを自在に使いこなせる
$('#id'), $('.class'), $('tag') など基本セレクタ
.find(), .filter(), .children(), .parent() など階層的な選択

属性や状態のセレクタ（例：$('input:checked'), $('a[href^="http"])）

✅ 目標例：
「HTML構造の中から特定の条件の要素だけを的確に取得して操作できる」

② DOM操作ができる
.text(), .html(), .val() などでテキストや値の取得・変更
.attr(), .prop() で属性やプロパティの操作
.addClass(), .removeClass(), .toggleClass() でCSSクラスの操作
.append(), .prepend(), .remove() などで要素の追加・削除

✅ 目標例：
「ボタンを押したら、特定の要素を非表示にし、別の要素を表示できる」

③ イベント処理ができる
.on('click', ...) や .hover()、.change() など
thisの使い方を理解して、クリックされた要素だけに反応
イベントのバブリングや.stopPropagation()の基本も知っていると◎

✅ 目標例：
「リストの項目をクリックしたら、その項目だけを色変更する」

④ アニメーションやエフェクトを扱える
.hide(), .show(), .fadeIn(), .slideToggle() など
.animate() を使って高度なカスタムアニメーション

✅ 目標例：
「メニューをスライドで表示・非表示にするUIが実装できる」

⑤ AJAX通信ができる（基本レベル）
.load(), .get(), .post() の使い方
$.ajax() を使ってサーバーと非同期通信し、結果をHTMLに反映

✅ 目標例：
「ボタンを押したらサーバーからJSONを取得して一覧に反映する」

⑥ フォームバリデーションやインタラクションの補助ができる
入力チェックや自動補完などの支援処理
.submit() イベントによる送信前の確認

✅ 目標例：
「空欄があれば送信できないようにし、エラーメッセージを表示できる」

⑦ jQueryプラグインを使える or 作れる
スライダー、モーダル、日付ピッカーなどのプラグインを導入・制御
簡単なカスタムプラグインが書けると◎（応用力）

✅ 目標例：
「LightboxやSlickなどのライブラリを導入し、自分のサイトに組み込める」
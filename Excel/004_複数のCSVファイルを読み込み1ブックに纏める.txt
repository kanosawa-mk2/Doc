Sub ImportCSVFiles()
    Dim ws As Worksheet
    Dim folderPath As String
    Dim fileName As String
    Dim filePath As String
    Dim textData As String
    Dim textLines As Variant
    Dim rowNum As Long, colNum As Long
    Dim cellValues As Variant
    Dim i As Integer, j As Integer
    

        ' ユーザーにフォルダ選択ダイアログを表示
    With Application.FileDialog(msoFileDialogFolderPicker)
        .Title = "CSVファイルが格納されたフォルダを選択してください"
        If .Show = -1 Then
            folderPath = .SelectedItems(1) & "\"
        Else
            Exit Sub ' キャンセルされた場合は終了
        End If
    End With
    
        ' 画面更新を停止（処理速度向上）
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    
    ' FileSystemObject を作成
    Set fso = CreateObject("Scripting.FileSystemObject")
    
    
    ' 📌 フォルダ内のCSVファイルを検索
    fileName = Dir(folderPath & "*.csv")

    ' CSVファイルを1つずつ処理
    Do While fileName <> ""
        filePath = folderPath & fileName

        ' 🔹 CSVファイルをUTF-8で読み込む
        textData = ReadUTF8File(filePath)

        ' 🔹 改行ごとに分割（1行ごとの配列）
        textLines = Split(textData, vbCrLf)

        ' ✅ 新しいシートを作成（ファイル名をシート名に設定）
        Set ws = ThisWorkbook.Sheets.Add
        ws.Name = Left(fileName, Len(fileName) - 4) ' 拡張子を除去

        rowNum = 1

        ' 📌 CSVデータを行ごとに処理
        For i = LBound(textLines) To UBound(textLines)
            If Trim(textLines(i)) <> "" Then ' 空行はスキップ
                cellValues = SplitCSVWithNewline(textLines(i)) ' カンマ処理（ダブルクォーテーション対応）
                
                colNum = 1
                For j = LBound(cellValues) To UBound(cellValues)
                    ' ✅ Excelの自動変換を防ぐために、すべて文字列として扱う
                    ws.Cells(rowNum, colNum).Value = "'" & cellValues(j)
                    colNum = colNum + 1
                Next j
                
                rowNum = rowNum + 1
            End If
        Next i

        ' 次のCSVファイルへ
        fileName = Dir()
    Loop
    
        ' 画面更新を再開
    Application.ScreenUpdating = True
    Application.DisplayAlerts = True
    
    MsgBox "CSVの読み込みが完了しました！", vbInformation
End Sub

Function ReadUTF8File(filePath As String) As String
    Dim stream As Object
    Dim textData As String

    ' 🔹 ADODB.Stream を使ってUTF-8のデータを正しく読み込む
    Set stream = CreateObject("ADODB.Stream")
    stream.Type = 2 ' テキストストリーム
    stream.Charset = "utf-8"
    stream.Open
    stream.LoadFromFile filePath

    ' ファイルの内容を取得
    textData = stream.ReadText
    stream.Close
    Set stream = Nothing

    ReadUTF8File = textData
End Function

Function SplitCSVWithNewline(line As String) As Variant
    Dim result() As String
    Dim tempStr As String
    Dim inQuotes As Boolean
    Dim i As Integer
    Dim char As String

    ' 初期化
    ReDim result(0)
    tempStr = ""
    inQuotes = False

    ' 1文字ずつ解析
    For i = 1 To Len(line)
        char = Mid(line, i, 1)

        ' 🔹 ダブルクォーテーションの処理
        If char = """" Then
            If inQuotes And i < Len(line) And Mid(line, i + 1, 1) = """" Then
                ' 連続するダブルクォーテーションはエスケープ処理（"" → "）
                tempStr = tempStr & """"
                i = i + 1
            Else
                ' ダブルクォーテーションの開閉を切り替え
                inQuotes = Not inQuotes
            End If
        ElseIf char = "," And Not inQuotes Then
            ' 🔹 カンマが区切り文字として機能するのは、ダブルクォーテーション外のみ
            result(UBound(result)) = tempStr
            tempStr = ""
            ReDim Preserve result(UBound(result) + 1)
        Else
            ' 通常の文字を追加
            tempStr = tempStr & char
        End If
    Next i

    ' 最後の値を格納
    result(UBound(result)) = tempStr

    SplitCSVWithNewline = result
End Function